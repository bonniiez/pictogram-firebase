{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/Modal.js","Login.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","firebaseAuth","auth","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","className","map","div","key","layout","whileHover","opacity","whileTap","scale","onClick","url","img","src","alt","initial","animate","transition","delay","Title","handleLogout","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","collectionRef","imageRef","child","name","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","imgurl","createdAt","add","ProgressBar","setFile","width","UploadForm","selectedFile","setSelectedFile","allowedTypes","type","onChange","e","selected","target","files","includes","Modal","selectedImg","classList","contains","y","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","auto","required","value","App","user","setUser","setPass","setEmailError","passError","setPassError","clearErrors","authListener","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","code","message","createUserWithEmailAndPassword","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ed58b8.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyADSh2WUPqZ-mYpJCPToSUZzuvIAmXHjFU\",\n    authDomain: \"pictogram-d9648.firebaseapp.com\",\n    projectId: \"pictogram-d9648\",\n    storageBucket: \"pictogram-d9648.appspot.com\",\n    messagingSenderId: \"413726148435\",\n    appId: \"1:413726148435:web:478df06f785980a63f43a6\"\n};\n// Initialize Firebase\n const firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebaseApp.storage();\nconst projectFirestore = firebaseApp.firestore(); //db\nconst firebaseAuth = firebaseApp.auth();\n\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { firebaseAuth, projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc') // newest documents first \n            .onSnapshot((snapshot) => {\n                //listening to realtime updates of collection\n                let documents = [];\n                snapshot.forEach(doc => {\n                    documents.push({\n                        ...doc.data(),\n                        id: doc.id,\n                    });\n                });\n                setDocs(documents);\n\n            })\n\n        return () => unsubscribe();\n    }, [collection]);\n    return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n    var { docs } = useFirestore(\"images\");\n    return (\n        <div className=\"img-grid\">\n            { docs.map(doc => (\n                <motion.div className=\"img-wrap\" key={doc.id}\n                    layout\n                    whileHover={{ opacity: 1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => setSelectedImg(doc.url)}>\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\n                        initial={{ opacity: 1 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ delay: 1 }}\n\n                    />\n\n                </motion.div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from \"react\";\n\nconst Title = ({handleLogout}) => {\n  return (\n    <div className=\"title\">\n      <nav>\n        <h1>PictoGram</h1>\n        <button className=\" logout-button\" onClick={handleLogout}>Log Out</button>\n      </nav>\n      <h2>Image Repository</h2>\n      <p>Upload your photos to build your own photo gallery!</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n\n    useEffect(() => {\n\n        var storageRef = projectStorage.ref();\n        var collectionRef = projectFirestore.collection(\"images\");\n        var imageRef = storageRef.child(file.name);\n        var uploadTask = imageRef.put(file);\n\n        uploadTask.on('state_changed', (snapshot) => {\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            // console.log(\"upload is \" + percentage + \" %done\");\n            setProgress(percentage);\n        }, (err) => {\n            setError(err)\n        }, async () => {\n            const imgurl = await imageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({\n                url: imgurl,\n                createdAt\n            })\n            setUrl(imgurl);\n        })\n    }, [file])\n\n    return { progress, url, error }\n\n}\n\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file);\n\n    useEffect(() => {\n        if (url) {\n            setFile(null);\n        }\n    }, [url, setFile])\n    return (\n        <motion.div className=\"progress-bar\"\n            initial={{ width: 0 }}\n            animate={{ width: progress + \"%\" }} ></motion.div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from '../comps/ProgressBar';\n\n\nconst UploadForm = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [error, setError] = useState(null);\n    const allowedTypes = ['image/png', 'image/jpeg'];\n\n\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if (selected && allowedTypes.includes(selected.type)) {\n            setSelectedFile(selected);\n            setError(\"\");\n\n        } else {\n            setSelectedFile(null)\n            setError(\"Please select an image file (png/jpeg) \")\n\n        }\n    }\n\n    return (\n        <form>\n            <label className=\"upload-image-button\">\n                <input type=\"file\"\n                    // value={selectedFile}\n                    onChange={changeHandler}\n                />\n                <span>+</span>\n\n            </label>\n\n            <div className=\"output\">\n                {error && <div className=\"error\">{error}</div>}\n                {selectedFile && <div > {selectedFile.name}</div>}\n                {selectedFile && <ProgressBar file={selectedFile} setFile={setSelectedFile} />}\n            </div>\n        </form >\n    )\n}\n\nexport default UploadForm;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\n    const handleClick = (e) => {\n        if (e.target.classList.contains('backdrop')) {\n            setSelectedImg(null);\n        }\n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}>\n\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\n                initial={{ y: \"-100vh\" }}\n                animate={{ y: 0 }}\n            />\n        </motion.div>\n    )\n}\n\nexport default Modal;","import React from \"react\";\n\nconst Login = (props) => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n  } = props;\n\n  return (\n    <section className=\"login\">\n      <div className=\"loginContainer\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          auto\n          required\n          value={email}\n          onChange={(e)=> setEmail(e.target.value)}\n        />\n        \n        <p className=\"errorMsg\">{emailError}</p>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p className=\"errorMsg\">{passwordError}</p>\n      \n      <div className=\"div btnContainer\">\n          {hasAccount ? (\n              <>\n          <button className=\"login-button\" onClick={handleLogin}>Sign In</button>\n          <p>Don't have an account? <span onClick={()=>setHasAccount(!hasAccount)}>Sign up</span></p>\n          </>\n          ) : (\n              <div>\n            <button className=\"login-button\" onClick={handleSignup}>Sign Up</button>\n            <p>Have an account? <span onClick={()=>setHasAccount(!hasAccount)} >Sign in</span></p>\n            </div>\n          )\n          \n        }\n      </div>\n      </div>\n    </section>\n  );\n};\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport {firebaseAuth} from './firebase/config';\nimport ImageGrid from './comps/ImageGrid';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport Modal from '../src/comps/Modal';\nimport Login from './Login';\n\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPass] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passError, setPassError] = useState('');\n  const [hasAccount, setHasAccount]= useState(false);\n\nconst clearInputs = ()=>{\n  setEmail(\"\");\n  setPass(\"\");\n}\n\nconst clearErrors=()=>{\n  setEmailError(\"\");\n  setPassError(\"\");\n\n}\n\n  const handleLogin = ()=>{\n    clearErrors();\n    firebaseAuth\n      .signInWithEmailAndPassword(email, password)\n      // .then((userCred)=>{\n      //   var user = userCred.user;\n      //   console.log(\"userCred: \",user);\n      // })\n      .catch((error)=>{\n        // eslint-disable-next-line default-case\n        switch(error.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(error.message);\n            break;\n          case \"auth/wrong-password\":\n            setPassError(error.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignup=()=>{\n    clearErrors();\n    firebaseAuth\n    .createUserWithEmailAndPassword(email, password)\n    // .then((userCred)=>{\n    //   var user = userCred.user;\n    //   console.log(\"userCred-signup: \",user);\n    // })\n    .catch((error)=>{\n      // eslint-disable-next-line default-case\n      console.log(\"signup error\",error);\n      // eslint-disable-next-line default-case\n      switch(error.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(error.message);\n          break;\n        case \"auth/weak-password\":\n          setPassError(error.message);\n          break;\n\n      }\n    })\n  }\n\n  const handleLogout=()=>{\n    firebaseAuth.signOut();\n  }\n\n  const authListener=()=>{\n    \n    firebaseAuth.onAuthStateChanged((user)=>{\n      if(user){\n        clearInputs();\n        setUser(user);\n      }else{\n        setUser(\"\");\n      }\n    })\n  }\n\nuseEffect(()=>{\n  authListener();\n},[])\n  \n\n  return (\n  \n    <div className=\"App\">\n      {user ? (\n      <>\n      <Title handleLogout={handleLogout}/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}\n      />}\n      </>):(\n        <Login email={email} \n      setEmail={setEmail} \n      password={password} \n      setPassword={setPass} \n      handleLogin={handleLogin} \n      handleSignup={handleSignup}\n      hasAccount={hasAccount}\n      setHasAccount={setHasAccount}\n      emailError = {emailError}\n      passwordError={passError}\n      />\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}